version: 2

defaults: &defaults
  parallelism: 1
  working_directory: ~/app
  environment:
    - npm_config_engine_strict: 1

jobs:
  "node-6":
    <<: *defaults
    docker:
      - image: cypress/base:6
    steps:
      - checkout
      - run: npm install
      - run: $(npm bin)/commit-message-install
      - run: $(npm bin)/run-if $(npm bin)/cypress version
      - run: DEBUG=cypress:cli $(npm bin)/run-if $(npm bin)/cypress verify
      # if tests fail, set the failure commit status right away
      - run:
          when: on_fail
          name: Set status check
          command: $(npm bin)/set-status --state failure --description "$CIRCLE_STAGE on CircleCI"

  "node-8":
    <<: *defaults
    docker:
      - image: cypress/base:8
        user: node
    steps:
      - checkout
      - run: node -v
      - run: npm -v
      - run: npm init -y
      - run: time npm install
      - run: $(npm bin)/commit-message-install
      - run: $(npm bin)/run-if $(npm bin)/cypress version
      - run: DEBUG=cypress:cli $(npm bin)/run-if $(npm bin)/cypress verify
      # if tests fail, set the failure commit status right away
      - run:
          when: on_fail
          name: Set status check
          command: $(npm bin)/set-status --state failure --description "$CIRCLE_STAGE on CircleCI"

  "node-8-npm-ci":
    <<: *defaults
    docker:
      - image: cypress/base:8
        user: node
    steps:
      - checkout
      - run: node -v
      - run: npm -v
      - run: npm init -y
      - run: time npm ci
      - run: npm t
      - run: $(npm bin)/commit-message-install --else "npm i cypress"
      - run: $(npm bin)/run-if $(npm bin)/cypress version
      - run: DEBUG=cypress:cli $(npm bin)/run-if $(npm bin)/cypress verify
      # if tests fail, set the failure commit status right away
      - run:
          when: on_fail
          name: Set status check
          command: $(npm bin)/set-status --state failure --description "$CIRCLE_STAGE on CircleCI"

  "node-10":
    <<: *defaults
    docker:
      - image: cypress/base:10
        user: node
    steps:
      - checkout
      - run: node -v
      - run: npm -v
      - run: npm init -y
      - run: npm install
      - run: $(npm bin)/commit-message-install
      - run: $(npm bin)/run-if $(npm bin)/cypress version
      - run: DEBUG=cypress:cli $(npm bin)/run-if $(npm bin)/cypress verify
      # if tests fail, set the failure commit status right away
      - run:
          when: on_fail
          name: Set status check
          command: $(npm bin)/set-status --state failure --description "$CIRCLE_STAGE on CircleCI"

  "node-8-global":
    <<: *defaults
    docker:
      - image: cypress/base:8
    steps:
      - checkout
      - run: echo install $CYPRESS_NPM_PACKAGE_NAME
      - run: npm install -g $CYPRESS_NPM_PACKAGE_NAME
      - run: DEBUG=cypress:cli cypress verify
      - run: git clone https://github.com/cypress-io/cypress-test-tiny.git
      - run:
          command: cypress run
          working_directory: cypress-test-tiny
      # if tests fail, set the failure commit status right away
      - run:
          when: on_fail
          name: Set status check
          command: $(npm bin)/set-status --state failure --description "$CIRCLE_STAGE on CircleCI"

  "yarn":
    <<: *defaults
    docker:
      - image: cypress/base:8
    steps:
      - checkout
      - run: npm install -g yarn
      - run: git clone https://github.com/cypress-io/cypress-test-tiny.git
      - run:
          name: Install Cypress with Yarn
          working_directory: cypress-test-tiny
          command: |
            echo install $CYPRESS_NPM_PACKAGE_NAME
            yarn add -D $CYPRESS_NPM_PACKAGE_NAME
      - run:
          command: $(npm bin)/cypress version
          working_directory: cypress-test-tiny
      - run:
          command: $(npm bin)/cypress verify
          working_directory: cypress-test-tiny
      - run:
          command: $(npm bin)/cypress run
          working_directory: cypress-test-tiny
      # if tests fail, set the failure commit status right away
      - run:
          when: on_fail
          name: Set status check
          command: $(npm bin)/set-status --state failure --description "$CIRCLE_STAGE on CircleCI"

  "yarn-1.1":
    <<: *defaults
    docker:
      - image: node:8.6
    steps:
      - checkout
      - run: npm install -g yarn@1.1.0
      - run: git clone https://github.com/cypress-io/cypress-test-tiny.git
      - run:
          name: Install Cypress with Yarn 1.1.0
          working_directory: cypress-test-tiny
          command: |
            echo Installing Cypress from $CYPRESS_NPM_PACKAGE_NAME
            yarn add -D $CYPRESS_NPM_PACKAGE_NAME
      - run:
          command: $(npm bin)/cypress version
          working_directory: cypress-test-tiny
      # if tests fail, set the failure commit status right away
      - run:
          when: on_fail
          name: Set status check
          command: $(npm bin)/set-status --state failure --description "$CIRCLE_STAGE on CircleCI"

  "yarn-1.1-cypress-0.20.3":
    <<: *defaults
    docker:
      - image: node:8.6
    steps:
      - checkout
      - run: npm install -g yarn@1.1.0
      - run: git clone https://github.com/cypress-io/cypress-test-tiny.git
      - run:
          name: Install Cypress with Yarn 1.1.0
          working_directory: cypress-test-tiny
          command: yarn add -D cypress@0.20.3
      - run:
          command: $(npm bin)/cypress version
          working_directory: cypress-test-tiny
      # if tests fail, set the failure commit status right away
      - run:
          when: on_fail
          name: Set status check
          command: $(npm bin)/set-status --state failure --description "$CIRCLE_STAGE on CircleCI"

  "node-8-global-kitchen-sink":
    <<: *defaults
    docker:
      - image: cypress/base:8
    steps:
      - checkout
      - run: echo install $CYPRESS_NPM_PACKAGE_NAME
      - run: npm install -g $CYPRESS_NPM_PACKAGE_NAME
      - run: DEBUG=cypress:cli cypress verify
      - run: git clone https://github.com/cypress-io/cypress-example-kitchensink.git
      - run:
          name: Install Kitchensink deps (but only the server)
          working_directory: cypress-example-kitchensink
          command: |
            git checkout 0.20.0
            npm install --production
      - run:
          name: Start Kitchensink example server
          command: npm start
          working_directory: cypress-example-kitchensink
          background: true
      - run:
          name: Running tests against Kitchensink example
          command: cypress run
          working_directory: cypress-example-kitchensink
      # if tests fail, set the failure commit status right away
      - run:
          when: on_fail
          name: Set status check
          command: $(npm bin)/set-status --state failure --description "$CIRCLE_STAGE on CircleCI"

  "install-zip-file":
    <<: *defaults
    docker:
      - image: cypress/base:6
    steps:
      - checkout
      - run:
          name: Start NPM package
          command: npm init -y
      - run:
          name: Download binary using curl
          command: curl -o cypress.zip -L $CYPRESS_BINARY_VERSION
      - run:
          name: Show files
          command: ls -l
      - run:
          name: Install cypress.zip
          command: CYPRESS_BINARY_VERSION=cypress.zip npm i $CYPRESS_NPM_PACKAGE_NAME
      - run:
          name: Verify installation
          command: $(npm bin)/cypress verify
      # if tests fail, set the failure commit status right away
      - run:
          when: on_fail
          name: Set status check
          command: $(npm bin)/set-status --state failure --description "$CIRCLE_STAGE on CircleCI"

  "chrome-browser":
    <<: *defaults
    docker:
      - image: cypress/browsers:chrome62
    steps:
      - checkout
      - run: git clone https://github.com/cypress-io/cypress-test-tiny.git
      - run:
          working_directory: cypress-test-tiny
          command: npm install
      # because cypress-test-tiny no longer installs Cypress
      # we need to install one
      - run:
          working_directory: cypress-test-tiny
          command: npm install cypress
      - run:
          working_directory: cypress-test-tiny
          command: $(npm bin)/commit-message-install
      - run:
          name: Test using Chrome
          command: $(npm bin)/run-if $(npm bin)/cypress run --browser chrome
          working_directory: cypress-test-tiny
      # if tests fail, set the failure commit status right away
      - run:
          when: on_fail
          name: Set status check
          command: $(npm bin)/set-status --state failure --description "$CIRCLE_STAGE on CircleCI"

  after-tests:
    # a job that sets success commit status
    # after all test jobs finish successfully
    <<: *defaults
    docker:
      - image: cypress/base:10
    steps:
      - checkout
      - run: npm install @cypress/commit-message-install
      - run:
          when: on_success
          name: Set status check
          command: $(npm bin)/set-status --state success --description "on CircleCI"

workflows:
  version: 2
  test-cypress-installs:
    jobs:
      - node-6
      - node-8
      - node-8-npm-ci
      - node-10

      # disable global installs (permissions issues in Docker container)
      # - node-8-global
      # - node-8-global-kitchen-sink

      ## commenting out until we can install packages from yarn in commit message
      # - yarn
      # - yarn-1.1
      - yarn-1.1-cypress-0.20.3

      ## comment out until we update cypress to add CYPRESS_NPM_PACKAGE_NAME to commit message
      # - install-zip-file
      - chrome-browser

      - after-tests:
          requires:
            - node-6
            - node-8
            - node-8-npm-ci
            - node-10
            - yarn-1.1-cypress-0.20.3
            - chrome-browser

